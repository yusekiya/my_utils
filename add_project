#!/bin/sh
REPOLOCAL="${HOME}/repos/deploy_research_env"
REPOREMOTE="https://github.com/yusekiya/deploy_research_env.git"

# Clone setup files if not exists
if [ ! -d "$REPOLOCAL" ]; then
    printf '%s' 'Cloning setup files...'
    git clone $REPOREMOTE $REPOLOCAL > /dev/null 2>&1
    printf '%s\n' ' done'
fi

function remove_git_history()
{
    rm -rf "./${projname}/.git"
}

function add_jupyter_env()
{
    cp -r "${REPOLOCAL}/jupyter" "./$projname"
    remove_git_history
}

function add_jupyter_db_env()
{
    cp -r "${REPOLOCAL}/jupyter-database" "./$projname"
    remove_git_history
}

function add_jupyter_cpp_env()
{
    cp -r "${REPOLOCAL}/jupyter-cpp" "./$projname"
    remove_git_history
}

function add_jupyter_cpp_db_env()
{
    cp -r "${REPOLOCAL}/jupyter-cpp-database" "./$projname"
    remove_git_history
}

function project_simple()
{
    mkdir -p "$projname"/{src,notebook,img,data}
}

printf '%s' 'Enter project name: '
read projname
proj_dir=$(printf '%s' $(pwd)/${projname} | sed -e "s@${HOME}@~@")
while true; do
    printf '%s\n' "${proj_dir} will be created"
    printf '%s' "Are you sure? [y]/n: "
    read answer
    case ${answer} in
        ""|"y"|"Y"|"yes"|"Yes"|"YES")
            printf '\n%s\n' 'Choose project type'
            printf '%5s%s\n' '0' ': jupyter'
            printf '%5s%s\n' '1' ': jupyter + PostgreSQL'
            printf '%5s%s\n' '2' ': jupyter + c/c++'
            printf '%5s%s\n' '3' ': jupyter + c/c++ + PostgreSQL'
            printf '%5s%s\n' 'other' ': only create blank directories'
            printf '%s' 'which? '
            read proj_type
            case ${proj_type} in
                "0")
                    add_jupyter_env
                    ;;
                "1")
                    add_jupyter_db_env
                    ;;
                "2")
                    add_jupyter_cpp_env
                    ;;
                "3")
                    add_jupyter_cpp_db_env
                    ;;
                *)
                    project_simple
                    ;;
            esac
            break
            ;;
        "n"|"N"|"no"|"No"|"NO")
            break
            ;;
        *)
            printf '%s\n' 'Answer with [y/n]'
            ;;
    esac
done
